// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package tokeniser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Tstring-0]
	_ = x[Tint-1]
	_ = x[Tfloat-2]
	_ = x[Tword-3]
	_ = x[TLSqB-4]
	_ = x[TRSqB-5]
	_ = x[Tsymbol-6]
	_ = x[TLB-7]
	_ = x[TRB-8]
}

const _TokenType_name = "TstringTintTfloatTwordTLSqBTRSqBTsymbolTLBTRB"

var _TokenType_index = [...]uint8{0, 7, 11, 17, 22, 27, 32, 39, 42, 45}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
